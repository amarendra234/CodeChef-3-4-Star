#include <bits/stdc++.h>
using namespace std;

int main() {
    int t;
    cin>>t;
    while(t--){
        int n,m;
        cin>>n>>m;
        int grid[n][m];
        int max_val=INT_MIN;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cin>>grid[i][j];
                max_val=max(max_val,grid[i][j]);
            }
        }
        queue<pair<int,pair<int,int>>>q;
        vector<vector<int>>vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==max_val){
                    q.push({i,{j,0}});
                    vis[i][j]=1;
                }
            }
        }
        int x[]={-1,0,1,-1,0,1,-1,1};
	    int y[]={1,1,1,-1,-1,-1,0,0};
        int min_hour=INT_MIN;
        while(q.size()>0){
            int row=q.front().first;
            int col=q.front().second.first;
            int steps=q.front().second.second;
            min_hour=max(min_hour,steps);
            q.pop();
            for(int i=0;i<8;i++){
                int lx=row+x[i];
                int ly=col+y[i];
                if(lx>=0 and lx<n and ly>=0 and ly<m and vis[lx][ly]==0){
                    q.push({lx,{ly,steps+1}});
                    vis[lx][ly]=1;
                }
            }
        }
        cout<<min_hour<<endl;

    }
	return 0;
}
